pipeline{ 
	agent any

	stages {

		stage('pre-task'){
			steps{
				sh 'echo $USER'
				sh 'grep /etc/group -e "docker"'
			}
		}
		stage('build python code'){
			agent{
				docker{
					image 'python:3-alpine'
				}
			}
			steps{
				sh 'python -m py_compile sources/web_app.py'
				stash(name: 'compiled-results', includes:'sources/*.py*')
			}
		}

		stage('test code'){
			agent{
				docker{
					image 'qnib/pytest'
				}
			}
			steps{
				sh 'sudo -H python -m pip install -r sources/requirements.txt'
				sh 'py.test --junit-xml test-reports/results.xml sources/test_web_app.py'
			}
			post{
				always{
					junit 'test-reports/results.xml'
				}
			}
		}
	}
	post{
		always {
			withCredentials([string(credentialsId: 'Discord_webhook_ks', variable: 'discord_webhook_url')]){
				discordSend description: "Flask_project (ノಠ益ಠ)ノ彡┻━┻ \n \n job: $JOB_NAME \n status: ${currentBuild.currentResult} \n BuildID: $BUILD_ID",
					footer: "End of Tansmission",
					link: env.BUILD_URL,
					result: currentBuild.currentResult,
					thumbnail: 'https://cdn.discordapp.com/attachments/859942982425378817/862792459900944415/jenkins-icon-Matthew-Cradit.png',
					title: JOB_NAME,
					webhookURL: "$discord_webhook_url"
			}
		}
	}
}

