pipeline{ 
	agent any 
	stages {
		stage('build python code'){
			steps{
				sh 'python3 -m py_compile sources/web_app.py'
				stash(name: 'compiled-results', includes:'sources/*.py*')
			}
		}

		stage('test code'){
			steps{
				sh 'py.test --junit-xml test-reports/results.xml sources/test_web_app.py'
			}
			post{
				always{
					junit 'test-reports/results.xml'
				}
			}
		}

		stage('notification'){
			steps{
				withCredentials([string(credentialsId: 'Discord_webhook_ks', variable: 'discord_webhook_url')]) {
					
					
					discordSend description: "Flask_project (ノಠ益ಠ)ノ彡┻━┻ \n\n git commit: ${GIT_COMMIT} \n job: $JOB_NAME \n status: ${currentBuild.currentResult} \n BuildID: $BUILD_ID",
						footer: "End of transmission", 
						link: env.BUILD_URL,
						result: currentBuild.currentResult, 
						thumbnail: 'https://cdn.discordapp.com/attachments/859942982425378817/862792459900944415/jenkins-icon-Matthew-Cradit.png', 
						title: JOB_NAME, webhookURL: "$discord_webhook_url"
				}
			}
		}
	}
}
